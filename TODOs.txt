* Find out how to properly create a folder structure for the bot package. 


* Figure out how to make a human-operable interface

* Probably need an Arena base class too. 

* Separate contsants.py and move functions to utils.py

* make sketch code for a play loop for each mode.


* OtherPlayersMayHave obviously also belongs in the state...... or does it??????
* State never knows anyones hands.


* Implement suit_mapping as a named tuple?!?!?!

*TODO: AM i allowed to open with the called ace?

* Add a force_play to BaseBot for debugging. 

# for the dumb monte carlo thingy, we don't even need to generate hands. Any player can play any card that hasn't yet been played. !!

# a step up in cleverness, is that once I have (otherplayersmayhave),
# i can put set self.untried_actions as otherplayersmayhave, in the nodes.

# PARTNER PLAY POINTS ARE NOT BEING CALCULATED CORRECTLY

#TODO: replace utility with straight number of points. For now, only calculate at games end when partners are known. 
#Could however make a heuristic search robot which uses current points as heuristic. Must solve the CSP first. 

# Put hardcoded rules for the gamestate in each new instance of a gamestate with the new function!!! 

# Replace +-1 utilities with actual point values. 

# add in a winning_points function. 

# add in a winners function into the state. Currently I can't debug the winners except for if i print them 

# add a check at the end of the game to see if everyone played by the rules. 